<div id="front-card" class="card-content">
    {{#正面}}
        <div id="audio-container"></div>

        <label>播放时间（秒）：</label>
        <input type="number" id="playTime" value="3">

        <label>暂停时间（秒）：</label>
        <input type="number" id="pauseTime" value="6">

        <label>倒退时间（秒）：</label>
        <input type="number" id="reverseTime" value="1">

        <button id="startPause">开始自动暂停</button>
        <button id="stopPause">停止</button>
        <button id="reversePlay">倒放</button>
        <button id="loopToggle">循环播放</button>
    {{/正面}}
</div>

<style>
    input, button, label, audio {
        display: block;
        margin-top: 10px;
    }
</style>

<script>
    window.audio = null;
    window.pauseInterval = null;
    window.isLooping = true;

    // 初始化音频
    function initializeAudio() {
        console.log("初始化音频...");

        // 确保删除旧的 audio 实例
        let oldAudio = document.getElementById("myAudio");
        if (oldAudio) {
            oldAudio.pause();
            oldAudio.currentTime = 0;
            oldAudio.remove();
        }

        let audioContainer = document.getElementById("audio-container");

        let newAudio = document.createElement("audio");
        newAudio.id = "myAudio";
        newAudio.controls = true;
        newAudio.autoplay = false;
        newAudio.loop = false;

        let source = document.createElement("source");
        source.src = "{{正面}}"; // 这里要替换成实际的音频地址
        source.type = "audio/mpeg";

        newAudio.appendChild(source);
        audioContainer.appendChild(newAudio);

        // 更新全局 audio 变量
        window.audio = newAudio;
        
        // 立即为音频添加事件监听器
        addListeners();
    }

    function addListeners() {
        if (!audio) {
            console.error("音频未初始化！");
            return;
        }
        document.getElementById("startPause").addEventListener("click", pauseEveryCustom);
        document.getElementById("stopPause").addEventListener("click", stopAutoPause);
        document.getElementById("reversePlay").addEventListener("click", toggleReverse);
        document.getElementById("loopToggle").addEventListener("click", toggleLoop);

        // 确保页面加载完成后启动自动暂停
        pauseEveryCustom();
    }

    function pauseEveryCustom() {
        if (!audio) return;

        // 再生時間と停止時間を取得
        let playDuration = parseFloat(document.getElementById("playTime").value) * 1000;
        let pauseDuration = parseFloat(document.getElementById("pauseTime").value) * 1000;

        // 前回のタイマーをクリア
        if (window.pauseInterval) clearTimeout(window.pauseInterval);

        // 音声の状態をリセット
        audio.pause();
        audio.currentTime = 0; // 再生位置をリセット

        // 再生と停止を繰り返すループ関数
        function playAndPauseLoop() {
            audio.play(); // 再生開始
            window.pauseInterval = setTimeout(() => {
                audio.pause(); // 再生を停止
                setTimeout(playAndPauseLoop, pauseDuration); // 停止後に再度再生
            }, playDuration);
        }

        // 再生ループを開始
        playAndPauseLoop();
    }

    function stopAutoPause() {
        // タイマーをクリア
        if (window.pauseInterval) {
            clearTimeout(window.pauseInterval);
            window.pauseInterval = null; // タイマーをリセット
        }

        // 音声を停止し、再生位置をリセット
        if (audio) {
            audio.pause();
            audio.currentTime = 0; // 再生位置をリセット
        }

        // ループ状態をリセット
        window.isLooping = false;
        console.log("Auto pause stopped.");
    }

    function toggleReverse() {
        if (!audio) return;
        let reverseSeconds = parseFloat(document.getElementById("reverseTime").value);
        audio.pause();
        audio.currentTime = Math.max(audio.currentTime - reverseSeconds, 0);
        audio.play();
    }

    function toggleLoop() {
        if (!audio) return;
        window.isLooping = !window.isLooping;
        audio.loop = window.isLooping;
        document.getElementById("loopToggle").innerText = window.isLooping ? "循环播放（已开）" : "循环播放（已关）";
    }

    // 页面加载时立即初始化音频
    initializeAudio();
</script>
